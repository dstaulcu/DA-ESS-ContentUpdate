[ESCU - Windows Event Log Cleared - Rule]
description = This search looks for Windows events that indicate one of the Windows event logs has been purged.
nes_fields = host
rule_description = The Event Logging System has been cleared or shutdown on $host$
rule_name = Windows Event Log Cleared
rule_title = Windows Event Log Cleared on $host$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Spike in blocked Outbound Traffic from your AWS - Rule]
description = This search will detect spike in blocked outbound network connections originating from within your AWS environment.  It will also update the cache file that factors in the latest data.
nes_fields = src_ip
rule_description = A spike in the blocked outbound connection is detected from source $src_ip$.
rule_name = Detect Spike in blocked Outbound Traffic from your AWS
rule_title = Spike in blocked outbound network connections from $src_ip$ detected.
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From IP Address\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Reg.exe used to hide files/directories via registry keys - Rule]
description = The search looks for command-line arguments used to hide a file or directory using the reg add command.
nes_fields = dest, process, cmdline
rule_description = Regedit.exe is used by attackers to hide malware files/directories in windows environments via registry key settings. This rule detects command-line arguments used to hide a file/directory
rule_name = Reg.exe used to hide files/directories via registry keys
rule_title = Regedit.exe used to hide a file/directory on $dest$ 
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Activity Related to Pass the Hash Attacks - Rule]
description = This search looks for specific authentication events from the Windows Security Event logs to detect potential attempts at using the Pass-the-Hash technique.
nes_fields = 
rule_description = This search looks for Authentication log events from the Windows Security Audit logs to detect potential attempts for Passing the Hash
rule_name = Detect Activity Related to Pass the Hash Attacks
rule_title = Detect Activity Related to Pass the Hash
security_domain = access
severity = low
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - TOR Traffic - Rule]
description = This search looks for network traffic identified as The Onion Router (TOR), a benign anonymity network which can be abused for a variety of nefarious purposes.
nes_fields = src_ip, dest_ip
rule_description = Network traffic accessing TOR detected from $src_ip$
rule_name = TOR Traffic
rule_title = TOR Network Traffic Allowed from $src_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Use of cmd.exe to Launch Script Interpreters - Rule]
description = This search looks for the execution of cscript.exe or wscript.exe with a parent of cmd.exe. The search will return the full command-lines for these executions, as well as the target system, sorted by time.
nes_fields = dest, process, parent_process, cmdline
rule_description = Potentially malicious script execution is detected
rule_name = Detect Use of cmd.exe to Launch Script Interpreters
rule_title = Command prompt is executing scripts on $dest$ using $process$ 
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect API activity from users without MFA - Rule]
description = This search looks for CloudTrail events where a user logged into the AWS account, is making API calls and has not enabled Multi Factor authentication. Multi factor authentication adds a layer of security by forcing the users to type a unique authentication code from an approved authentication device when they access AWS websites or services. AWS Best Practices recommend that you enable MFA for privileged IAM users.
nes_fields = user
rule_description = API Activity detected from $user$ without MFA enabled.
rule_name = Detect API activity from users without MFA
rule_title = API Activity detected from $user$ without MFA enabled
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate AWS User Activities by user field\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Create or delete hidden shares using net.exe - Rule]
description = This search looks for the creation or deletion of hidden shares using net.exe.
nes_fields = dest
rule_description = Net.exe was used to create or delete hidden network shares by $user$ on $dest$
rule_name = Create or delete hidden shares using net.exe
rule_title = Hidden File shares created/deleted on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Outbound Emails to Hidden Cobra Threat Actors\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - EC2 Instance Started In Previously Unseen Region - Rule]
description = This search looks for CloudTrail events where an instance is started in a particular region in the last one hour and then compares it to a lookup file of previously seen regions where an instance was started
nes_fields = awsRegion
rule_description = An AWS instance is started in a new, previously unseen, region
rule_name = EC2 Instance Started In Previously Unseen Region
rule_title = AWS instance is started in a new region
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Launch Details\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Unusually Long Content-Type Length - Rule]
description = This search looks for unusually long strings in the Content-Type http header that the client sends the server.
nes_fields = src_ip, dest_ip, url
rule_description = This search looks for unusually long strings in the Content-Type http header
rule_name = Unusually Long Content-Type Length
rule_title = Unusually Long Content-Type Length
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate Suspicious Strings in HTTP Header\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Spike in Network ACL Activity - Rule]
description = This search will detect users creating spikes in API activity related to network access-control lists (ACLs)in your AWS environment.
nes_fields = user
rule_description = A spike in the number of AWS API calls related to network ACLs by $user$ was detected.
rule_name = Detect Spike in Network ACL Activity
rule_title = Spike in AWS Network ACL activity detected by $user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network ACL Details from ID\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Malicious PowerShell Process - Connect To Internet With Hidden Window - Rule]
description = This search looks for PowerShell processes started with parameters to modify the execution policy of the run, run in a hidden window, and connect to the Internet. This combination of command-line options is suspicious because it's overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a PowerShell process that connects to the Internet with a hidden window.
rule_name = Malicious PowerShell Process - Connect To Internet With Hidden Window
rule_title = Malicious PowerShell Process detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Protocol or Port Mismatch - Rule]
description = This search looks for network traffic on common ports where a higher layer protocol does not match the port that is being used. For example, this search should identify cases where protocols other than HTTP are running on TCP port 80. This can be used by attackers to circumvent firewall restrictions, or as an attempt to hide malicious communications over ports and protocols that are typically allowed and not well inspected.
nes_fields = dest_ip, src_ip
rule_description = This search looks for network traffic on common ports where the underlying protocol does not match the port being used. For example, this search should identify cases where protocols other than HTTP are running on port 80. This can be used by attackers to circumvent firewall restrictions, or as an attempt to hide malicious communications in traffic that is typically allowed and not well inspected.
rule_name = Protocol or Port Mismatch
rule_title = Protocol / Port Mismatch from $src_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious Changes to File Associations - Rule]
description = This search looks for changes to registry values that control Windows file associations, executed by a process that is not typical for legitimate, routine changes to this area.
nes_fields = dest, user, process_name, process
rule_description = The system $dest$ had an unusual change to a file association
rule_name = Suspicious Changes to File Associations
rule_title = Suspicious File Association Change on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Remote Desktop Process Running On System - Rule]
description = This search looks for the remote desktop process, mstsc.exe, running on systems it doesn't typically run on. This is accomplished by filtering out all systems that are noted in the common_rdp_source category in the Assets and Identity framework.
nes_fields = dest, user, process_name, process
rule_description = The system $dest$ is running the remote desktop process, mstsc.exe. This system does not commonly run this application
rule_name = Remote Desktop Process Running On System
rule_title = Remote Desktop Process Running On $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Outbound Emails to Hidden Cobra Threat Actors\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect New Local Admin account - Rule]
description = This search looks for newly created accounts that have been elevated to local administrators.
nes_fields = user,src_user, dest
rule_description = The new user account $user$ was created on $dest$ by $src_user$.
rule_name = Detect New Local Admin account
rule_title = New local admin account $user$ created by $src_user$.
security_domain = access
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect attackers scanning for vulnerable JBoss servers - Rule]
description = This search looks for specific GET or HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers. JexBoss is described as the exploit tool of choice for this malicious activity.
nes_fields = 
rule_description = This search looks for specific GET/HEAD requests to web servers that are indicative of reconnaissance attempts to identify vulnerable JBoss servers.
rule_name = Detect attackers scanning for vulnerable JBoss servers
rule_title = Detect attackers scanning for vulnerable JBoss servers
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Network Access Control List Created with All Open Ports - Rule]
description = The search looks for CloudTrail events to detect if any network ACLs were created with all the ports open to a specified CIDR.
nes_fields = account_id, src, src_user
rule_description = $src_user$ created a network access control list with all ports open.
rule_name = AWS Network Access Control List Created with All Open Ports
rule_title = Network ACL created with all ports open by $src_user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network ACL Details from ID\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Unauthorized Assets by MAC address - Rule]
description = By populating the organization's assets within the assets_by_str.csv, we will be able to detect unauthorized devices that are trying to connect with the organization's network by inspecting DHCP request packets, which are issued by devices when they attempt to obtain an IP address from the DHCP server. The MAC address associated with the source of the DHCP request is checked against the list of known devices, and reports on those that are not found.
nes_fields = src, query
rule_description = The host $src$ issued a DHCP request to connect with your network that does not belong to the list of authorized devices
rule_name = Detect Unauthorized Assets by MAC address
rule_title = Unauthorized Asset found with mac address: $src_mac$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get First Occurrence and Last Occurrence of a MAC Address\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Spectre and Meltdown Vulnerable Systems - Rule]
description = The search is used to detect systems that are still vulnerable to the Spectre and Meltdown vulnerabilities.
nes_fields = dest
rule_description = $dest is vulnerable to the Spectre or Meltdown CPU vulnerabilities.
rule_name = Spectre and Meltdown Vulnerable Systems
rule_title = $dest is vulnerable to the Spectre or Meltdown CPU vulnerabilities
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - EC2 Instance Started With Previously Unseen AMI - Rule]
description = This search looks for EC2 instances being created with previously unseen AMIs.
nes_fields = dest
rule_description = The EC2 instance $dest$ was created with previously unused AMI $amiID$
rule_name = EC2 Instance Started With Previously Unseen AMI
rule_title = EC2 Instance Type $dest$ Created With New AMI
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Launch Details\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Processes launching netsh - Rule]
description = This search looks for processes launching netsh.exe. Netsh.exe is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via command-line.
nes_fields = dest, process, parent_process, cmdline
rule_description = A process is detected on $dest$ which is launching netsh.exe 
rule_name = Processes launching netsh
rule_title = Process launching netsh.exe detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Web Servers Executing Suspicious Processes - Rule]
description = This search looks for suspicious processes on all systems labeled as web servers.
nes_fields = dest, user, process
rule_description = This search looks for suspicious processes on all systems labeled as web servers
rule_name = Web Servers Executing Suspicious Processes
rule_title = Web Servers Executing Suspicious Processes
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate Suspicious Strings in HTTP Header\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Schtasks used for forcing a reboot - Rule]
description = This search looks for flags passed to schtasks.exe on the command-line that indicate that a forced reboot of system is scheduled.
nes_fields = dest, user, process
rule_description = This search looks for flags passed to schtasks.exe on the command-line that indicate a job is scheduled to force a reboot
rule_name = Schtasks used for forcing a reboot
rule_title = Schtasks used for scheduling a force reboot
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Long DNS TXT Record Response - Rule]
description = This search is used to detect attempts to use DNS tunneling, by calculating the length of responses to DNS TXT queries. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting unusually large volumes of DNS traffic.
nes_fields = src, query
rule_description = A DNS TXT record response of over 100 characters was detected.
rule_name = Detect Long DNS TXT Record Response
rule_title = Long DNS TXT Record Response
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious Reg.exe Process - Rule]
description = This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe, the parent process is usually explorer.exe. This search filters out those instances.
nes_fields = dest, user, process
rule_description = The system $dest$ had reg.exe process run not initiated by a user.
rule_name = Suspicious Reg.exe Process
rule_title = Suspicious reg.exe process detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious writes to windows Recycle Bin - Rule]
description = This search detects writes to the recycle bin by a process other than explorer.exe.
nes_fields = dest, file_name, process
rule_description = The process $process$ on $dest$ wrote $file_name$ to the Recycle Bin.
rule_name = Suspicious writes to windows Recycle Bin
rule_title = Suspicious process $process$ wrote to the Recycle Bin on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious File Write - Rule]
description = The search looks for files created with names that have been linked to malicious activity.
nes_fields = dest, file_name
rule_description = A write to a filename associated with malicious activity detected on $dest$.
rule_name = Suspicious File Write
rule_title = Suspicious File Write Detected on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Outbound Emails to Hidden Cobra Threat Actors\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Clients Connecting to Multiple DNS Servers - Rule]
description = This search allows you to identify the endpoints that have connected to more than five DNS servers and made DNS Queries over the time frame of the search.
nes_fields = src, dest
rule_description = This search allows you to identify the endpoints that have connected to more than five DNS servers over the time frame specified in the search.
rule_name = Clients Connecting to Multiple DNS Servers
rule_title = Client $src$ Connecting to Multiple DNS Servers
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Monitor Registry Keys for Print Monitors - Rule]
description = This search looks for registry activity associated with modifications made to the registry key <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. In this scenario, an attacker can load an arbitrary DLL into the Print Monitor registry by giving the full path name to the DLL and the system will execute the DLL with elevated (SYSTEM) permissions and will also persist on a reboot.
nes_fields = dest, user, object_path
rule_description = A registry key that is associated with adding print monitors can potentially be misused by giving it a path of a malicious DLL in the registry
rule_name = Monitor Registry Keys for Print Monitors
rule_title = Registry Key changes for Print Monitors detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Remote Registry Key modifications - Rule]
description = This search monitors for modifications to registry keys made remotely.
nes_fields = dest, user, object
rule_description = A registry key was modified remotely using the machine $dest$ by $user$
rule_name = Remote Registry Key modifications
rule_title = Remote Registry Key Modification detection on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Abnormally High AWS Instances Launched by User - Rule]
description = This search looks for CloudTrail events where a user successfully launches an abnormally high number of instances.
nes_fields = userName
rule_description = An abnormally high number of instances were launched by a user within in a 10-minute window
rule_name = Abnormally High AWS Instances Launched by User
rule_title = High Number of instances launched by $userName$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Launch Details\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Email servers sending high volume traffic to hosts - Rule]
description = This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.
nes_fields = dest_ip
rule_description = High volume of traffic that originated from an email server is being sent to $dest_ip$
rule_name = Email servers sending high volume traffic to hosts
rule_title = High volume of traffic from an email server sent to $dest_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Excessive DNS Failures - Rule]
description = This search identifies DNS query failures by counting the number of DNS responses that do not indicate success, and trigger on more than 50 occurrences.
nes_fields = src, query
rule_description = This search identifies DNS query failures by counting the number of DNS responses that do not indicate success and triggers on more than 50 occurrences.
rule_name = Excessive DNS Failures
rule_title = Excessive DNS Failures
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - DNS Query Length With High Standard Deviation - Rule]
description = This search allows you to identify DNS requests and compute the standard deviation on the length of the names being resolved, then filter on two times the standard deviation to show you those queries that are unusually large for your environment.
nes_fields = dest
rule_description = Filter DNS requests and compute the standard deviation then filter on 2 times the standard deviation
rule_name = DNS Query Length With High Standard Deviation
rule_title = DNS query length with high standard deviation
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - USN Journal Deletion - Rule]
description = The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.
nes_fields = dest, user, process_name
rule_description = The system $dest$ deleted its NTFS journals.
rule_name = USN Journal Deletion
rule_title = File System Journal Deleted on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Disabling Remote User Account Control - Rule]
description = The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).
nes_fields = dest, src_user, object_path
rule_description = The registry key SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy was modified.  This registry key is associated with disabling remote UAC on Windows.
rule_name = Disabling Remote User Account Control
rule_title = Registry Key Associated With Disabling Remote UAC ModifiedPersistence Modified on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Cloud Provisioning From Previously Unseen City - Rule]
description = This search looks for AWS provisioning activities from previously unseen cities.  Provisioning activities are defined broadly as any event that begins with "Run" or "Create." 
nes_fields = src_ip, city
rule_description = Your AWS infrastructure was provisioned from a city, $city$, which has never before been seen provisioning your infrastructure.
rule_name = AWS Cloud Provisioning From Previously Unseen City
rule_title = AWS Provision Activity From $city$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From City\n     - ESCU - Get All AWS Activity From Country\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get All AWS Activity From Region\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - System Processes Run From Unexpected Locations - Rule]
description = This search looks for system processes that normally run out of C:\Windows\System32\ or C:\Windows\SysWOW64 that are not run from that location.  This can indicate a malicious process that is trying to hide as a legitimate process.
nes_fields = user, process, dest
rule_description = The system $dest$ has a process that normally runs out of Windows\System32\ that is not being run from that location.
rule_name = System Processes Run From Unexpected Locations
rule_title = System Processes Run From Unexpected Location on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Common Ransomware Extensions - Rule]
description = The search looks for file modifications with extensions commonly used by Ransomware
nes_fields = dest, file_name
rule_description = A file modification was detected on $dest$ with an extension commonly used by ransomware
rule_name = Common Ransomware Extensions
rule_title = Ransomware Extension detected on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Common Ransomware Notes - Rule]
description = The search looks for files created with a name that matches one of those typically used for the 'note' file left behind instructing the victim how to get their data back.
nes_fields = dest, file_name
rule_description = A file modification associated with a ransomware victim notification file detected on $dest$
rule_name = Common Ransomware Notes
rule_title = Ransomware Note File detected on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Malicious PowerShell Process - Multiple Suspicious Command-Line Arguments - Rule]
description = This search looks for PowerShell processes started with a base64 encoded command-line passed to it, with parameters to modify the execution policy for the process, and those that prevent the display of an interactive prompt to the user. This combination of command-line options is suspicious because it overrides the default PowerShell execution policy, attempts to hide itself from the user, and passes an encoded script to be run on the command-line.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a PowerShell that had an encoded command on the command-line, attempted to bypass local execution policy, and prevented the display of an interactive prompt to the user.
rule_name = Malicious PowerShell Process - Multiple Suspicious Command-Line Arguments
rule_title = PowerShell process with multiple suspicious command-line arguments detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Malicious PowerShell Process - Execution Policy Bypass - Rule]
description = This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a PowerShell process with parameters to bypass the local execution policy.
rule_name = Malicious PowerShell Process - Execution Policy Bypass
rule_title = PowerShell process with -executionpolicy bypass detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Splunk Enterprise Information Disclosure - Rule]
description = This search allows you to look for evidence of exploitation for CVE-2018-11409, a Splunk Enterprise Information Disclosure Bug.
nes_fields = dest, src_ip
rule_description = The Splunk Server $dest$ had a possible Splunk information-disclosure possibility from $src_ip$
rule_name = Splunk Enterprise Information Disclosure
rule_title = Possible Splunk Information Disclosure Exploitation Attempt from $src_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate Network Traffic From src_ip\n     - ESCU - Investigate Web Activity From src_ip\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Overwriting Accessibility Binaries - Rule]
description = Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.
nes_fields = dest, file_name
rule_description = A file, $file_name$, was created in the default shim database directory on $dest.
rule_name = Overwriting Accessibility Binaries
rule_title = Modification to accessibility binary, $file_path$, was detected on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Path Interception By Creation Of program.exe - Rule]
description = The search is looking for the creation of file C:\program.exe.  The creation of this file in the C:\ drive is driven by a motive to perform path interception. 
nes_fields = dest, process, cmdline
rule_description = A potentially malicious file program.exe is detected in the C: drive. The creation of this file is often associated with a motive to perform a path interception attack. 
rule_name = Detect Path Interception By Creation Of program.exe
rule_title = Path Interception attempt discovered $dest$ via creation of program.exe
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - First time seen command line argument - Rule]
description = This search looks for command-line arguments that use a <code>/c</code> parameter to execute a command that has not previously been seen.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a command-line argument, $cmdline$, that has not previously been seen.
rule_name = First time seen command line argument
rule_title = First-time seen command-line argument was detected on $dest$.
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious Email Attachment Extensions - Rule]
description = This search looks for emails that have attachments with suspicious file extensions.
nes_fields = src_user, file_name
rule_description = The sender $src_user$ has sent an email with a suspicious file named $file_name$
rule_name = Suspicious Email Attachment Extensions
rule_title = Suspicious Email Attachment from $src_user$
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Email Info\n     - ESCU - Get Emails From Specific Sender\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Malicious PowerShell Process With Obfuscation Techniques - Rule]
description = This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a PowerShell process that has evidence of obfuscation on the command-line
rule_name = Malicious PowerShell Process With Obfuscation Techniques
rule_title = PowerShell process with an obfuscation techniques detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect hosts connecting to dynamic domain providers - Rule]
description = Malicious actors often abuse legitimate Dynamic DNS services to host malicious payloads or interactive command and control nodes. Attackers will automate domain resolution changes by routing dynamic domains to countless IP addresses to circumvent firewall blocks, blacklists as well as frustrate a network defenders analytic and investigative processes. This search will look for DNS queries made from within your infrastructure to suspicious dynamic domains. 
nes_fields = answer, src, query
rule_description = The search has detected a host making outbound queries to Dynamic DNS providers
rule_name = Detect hosts connecting to dynamic domain providers
rule_title = Host $src$ detected to make a query to a Dynamic DNS provider
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Excessive Account Lockouts From Endpoint - Rule]
description = This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.
nes_fields = dest
rule_description = The system $dest$ has generated a high number of account lockouts.
rule_name = Detect Excessive Account Lockouts From Endpoint
rule_title = $dest$ has generated a high number of account lockouts
security_domain = access
severity = low
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Logon Rights Modifications For Endpoint\n     - ESCU - Get Logon Rights Modifications For User\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - No Windows Updates in a time frame - Rule]
description = This search looks for Windows endpoints that have not generated an event indicating a successful Windows update in the last 60 days. Windows updates are typically released monthly and applied shortly thereafter. An endpoint that has not successfully applied an update in this time frame indicates the endpoint is not regularly being patched for some reason.
nes_fields = src, user
rule_description = The system $src$ has not generated a successful Windows Update event in 60 days or more.
rule_name = No Windows Updates in a time frame
rule_title = No Windows updates in last 60 days on $src$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect USB device insertion - Rule]
description = The search is used to detect hosts that generate Windows Event ID 4663 for successful attempts to write to or read from a removable storage and Event ID 4656 for failures, which occurs when a USB drive is plugged in. In this scenario we are querying the Change_Analysis data model to look for Windows Event ID 4656 or 4663 where the priority of the affected host is marked as high in the ES Assets and Identity Framework.
nes_fields = dest
rule_description = Read/Write attempt to a USB was detected on this host
rule_name = Detect USB device insertion
rule_title = Read/Write attempt to a USB detected on $dest$
security_domain = endpoint
severity = low
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Shim Database Installation With Suspicious Parameters - Rule]
description = This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.
nes_fields = dest, user, process
rule_description = The system $dest$ had a shim database installed.
rule_name = Shim Database Installation With Suspicious Parameters
rule_title = Shim Database Installation on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect malicious requests to exploit JBoss servers - Rule]
description = This search is used to detect malicious HTTP requests crafted to exploit jmx-console in JBoss servers. The malicious requests have a long URL length, as the payload is embedded in the URL.
nes_fields = src, dest_ip
rule_description = A search for detecting malicious requests made to exploit jmx-console in JBoss servers. The bad requests have a long url length since it serves the payload via the url
rule_name = Detect malicious requests to exploit JBoss servers
rule_title = Detected malicious requests to exploit JBoss servers
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Excessive User Account Lockouts - Rule]
description = This search detects accounts that have been locked out a relatively high number of times in a short period.
nes_fields = user
rule_description = The account $user$ has been locked out an excessive number of times
rule_name = Detect Excessive User Account Lockouts
rule_title = $user$ locked account an excessive number of times
security_domain = access
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Logon Rights Modifications For Endpoint\n     - ESCU - Get Logon Rights Modifications For User\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Spike in AWS API Activity - Rule]
description = This search will detect users creating spikes of API activity in your AWS environment.  It will also update the cache file that factors in the latest data.
nes_fields = user
rule_description = A spike in the number of AWS API calls by $user$ was detected.
rule_name = Detect Spike in AWS API Activity
rule_title = Spike in AWS API activity detected by $user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate AWS User Activities by user field\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - RunDLL Loading DLL By Ordinal - Rule]
description = This search looks for DLLs under %AppData% being loaded by rundll32.exe that are calling the exported function at ordinal 2. Calling exported functions by ordinal is not as common as calling by exported name. There was a bug fixed in IDAPro on 2016-08-08 that would not display functions without names.  Calling functions by ordinal would overcome the lack of name and make it harder for analyst to reverse engineer.
nes_fields = dest, user, process
rule_description = This search looks for DLLs under %AppData% being loaded by rundll32.exe that are calling the exported function at ordinal 2.  Calling exported functions by ordinal is not as common as calling by exported name.  There was a bug fixed in IDAPro on 2016-08-08 that would not display functions with no names.  Calling functions by ordinal would overcome the lack of name and make it harder for analyst to reverse engineer.
rule_name = RunDLL Loading DLL By Ordinal
rule_title = Endpoint - Suspicious RunDLL usage
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Large Volume of DNS ANY Queries - Rule]
description = The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.
nes_fields = dest
rule_description = The search is used to identify attempts to use your DNS Infrastructure for DDoS purposes via a DNS amplification attack leveraging ANY queries.
rule_name = Large Volume of DNS ANY Queries
rule_title = Large Volume of DNS ANY Queries
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Windows hosts file modification - Rule]
description = The search looks for modifications to the hosts file on all Windows endpoints across your environment.
nes_fields = dest, file_name
rule_description = A file modification was noted for the hosts file on $dest$.
rule_name = Windows hosts file modification
rule_title = Modification of hosts file detected on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Process responsible for the DNS traffic\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Unsuccessful Netbackup backups - Rule]
description = This search gives you the hosts where a backup was attempted and then failed.
nes_fields = dest
rule_description = The system $dest$ attempted a backup but encountered an error.
rule_name = Unsuccessful Netbackup backups
rule_title = Failed backup attempt by $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - All backup logs for host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Large Outbound ICMP Packets - Rule]
description = This search looks for outbound ICMP packets with a packet size larger than 1,000 bytes. Various threat actors have been known to use ICMP as a command and control channel for their attack infrastructure. Large ICMP packets from an endpoint to a remote host may be indicative of this activity.
nes_fields = src_ip, dest_ip
rule_description = Large outbound ICMP packet detected.
rule_name = Detect Large Outbound ICMP Packets
rule_title = Large ICMP packet from $src_ip$ to $dest_ip$ detected
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Abnormally High AWS Instances Terminated by User - Rule]
description = This search looks for CloudTrail events where an abnormally high number of instances were successfully terminated by a user in a 10-minute window
nes_fields = userName
rule_description = An abnormally high number of instances were terminated by a user in a 10-minute window
rule_name = Abnormally High AWS Instances Terminated by User
rule_title = High number of instances terminated by $userName$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Instance Details by instanceId\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n     - ESCU - Investigate AWS activities via region name\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Scheduled Task Name Used by Dragonfly Threat Actors - Rule]
description = This search looks for flags passed to schtasks.exe on the command-line that indicate a task name associated with the Dragonfly threat actor was created or deleted.
nes_fields = dest, user, process
rule_description = This search looks for flags passed to schtasks.exe on the command line that indicate that a task--whose name is associated with the Dragonfly threat actor--has been created or deleted
rule_name = Scheduled Task Name Used by Dragonfly Threat Actors
rule_title = Scheduled task used by Dragonfly threat actor detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Spike in File Writes - Rule]
description = The search looks for a sharp increase in the number of files written to a particular host
nes_fields = dest, file_name
rule_description = A sharp increase in file writes was detected on $dest
rule_name = Spike in File Writes
rule_title = Spike in file writes on $dest$
security_domain = endpoint
severity = low
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect new API calls from user roles - Rule]
description = This search detects new API calls that have either never been seen before or that have not been seen in the previous hour, where the identity type is <code>AssumedRole</code>.
nes_fields = user
rule_description = A new API call made by $user$ has been detected. This API activity has either never been seen before or has not been seen within the last hour.
rule_name = Detect new API calls from user roles
rule_title = New API call by $user$ detected
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate AWS User Activities by user field\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Hiding Files And Directories With Attrib.exe - Rule]
description = Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.
nes_fields = dest, process, cmdline
rule_description = Attrib.exe is often used by attackers to hide malware files and directories in windows environments. This rule detects command-line arguments used to hide a file/directory
rule_name = Hiding Files And Directories With Attrib.exe
rule_title = Suspicious usage of attrib.exe on $dest$ 
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - SQL Injection with Long URLs - Rule]
description = This search looks for long URLs that have several SQL commands visible within them.
nes_fields = dest, src, url
rule_description = Using the length of url or user agent to identify SQL injection
rule_name = SQL Injection with Long URLs
rule_title = SQL Injection with Long URLs
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Cloud Provisioning From Previously Unseen IP Address - Rule]
description = This search looks for AWS provisioning activities from previously unseen IP addresses. Provisioning activities are defined broadly as any event that begins with "Run" or "Create." 
nes_fields = src_ip
rule_description = Your AWS infrastructure was provisioned from an IP, $src_ip$, which has never before been seen provisioning your infrastructure.
rule_name = AWS Cloud Provisioning From Previously Unseen IP Address
rule_title = AWS Provision Activity From $src_ip$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From City\n     - ESCU - Get All AWS Activity From Country\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get All AWS Activity From Region\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Execution of File With Spaces Before Extension - Rule]
description = This search looks for processes launched from files that have at least five spaces in the name before the extension. This is typically done to obfuscate the file extension by pushing it outside of the default view.
nes_fields = dest, process, object_path
rule_description = The system $dest$ executed a file with a double extension
rule_name = Execution of File With Spaces Before Extension
rule_title = Process With Multiple Extensions Launched on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Registry Keys Used For Privilege Escalation - Rule]
description = This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under Image File Execution Options are used to intercept calls to an executable, and can be used to attach malicious binaries to benign system binaries.
nes_fields = dest, user, object
rule_description = A registry key that is used for privilege escalation was modified on $dest$ by $user$
rule_name = Registry Keys Used For Privilege Escalation
rule_title = Registry Key Associated With Privilege Escalation Modified on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - EC2 Instance Modified With Previously Unseen User - Rule]
description = This search looks for EC2 instances being modified by users who have not previously modified them.
nes_fields = user, dest
rule_description = The EC2 instance $dest$ was modified by $user$. This user has never modified an EC2 instance before.
rule_name = EC2 Instance Modified With Previously Unseen User
rule_title = EC2 Instance Modified By Previously Unseen User $user$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Instance Details by instanceId\n     - ESCU - Get Notable History\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Short Lived Windows Accounts - Rule]
description = This search detects accounts that were created and deleted in a short time period.
nes_fields = user
rule_description = The account $user$ was created and deleted in a short amount of time.
rule_name = Short Lived Windows Accounts
rule_title = Short lived account $user$ on $dest
security_domain = access
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Logon Rights Modifications For Endpoint\n     - ESCU - Get Logon Rights Modifications For User\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Cloud Provisioning From Previously Unseen Region - Rule]
description = This search looks for AWS provisioning activities from previously unseen regions. Region in this context is similar to a state in the United States. Provisioning activities are defined broadly as any event that begins with "Run" or "Create."
nes_fields = src_ip, Region
rule_description = Your AWS infrastructure was provisioned from a region, $Region$, which has never before been seen provisioning your infrastructure.
rule_name = AWS Cloud Provisioning From Previously Unseen Region
rule_title = AWS Provision Activity From $region$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From City\n     - ESCU - Get All AWS Activity From Country\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get All AWS Activity From Region\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect New Login Attempts to Routers - Rule]
description = The search queries the authentication logs for assets that are categorized as routers in the ES Assets and Identity Framework, to identify connections that have not been seen before in the last 30 days.
nes_fields = dest, user
rule_description = This search detects new connections made to the router devices at $dest$
rule_name = Detect New Login Attempts to Routers
rule_title = Detected a New Router Login
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect new user AWS Console Login - Rule]
description = This search looks for CloudTrail events wherein a console login event by a user was recorded within the last hour, then compares the event to a lookup file of previously seen users (by ARN values) who have logged into the console. The alert is fired if the user has logged into the console for the first time within the last hour
nes_fields = arn
rule_description = A new user has logged into the AWS console
rule_name = Detect new user AWS Console Login
rule_title = AWS Console Login by New User
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - EC2 Instance Started With Previously Unseen User - Rule]
description = This search looks for EC2 instances being created by users who have not created them before.
nes_fields = user, dest
rule_description = The EC2 instance $dest$ was created by $user$.  This user has never created an EC2 instance before.
rule_name = EC2 Instance Started With Previously Unseen User
rule_title = EC2 Instance Created By Previously Unseen User $user$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Launch Details\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Remote WMI Command Attempt - Rule]
description = This search looks for wmic.exe being launched with parameters to operate on remote systems.
nes_fields = dest, user, process
rule_description = This search looks for wmic.exe being launched with parameters to operate on remote systems.
rule_name = Remote WMI Command Attempt
rule_title = Endpoint - Remote WMI command attempt
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Network Access Control List Deleted - Rule]
description = Enforcing network-access controls is one of the defensive mechanisms used by cloud administrators to restrict access to a cloud instance. After the attacker has gained control of the AWS console by compromising an admin account, they can delete a network ACL and gain access to the instance from anywhere. This search will query the CloudTrail logs to detect users deleting network ACLs.
nes_fields = src, src_user, eventName
rule_description = AWS network ACL has been deleted by $src_user.
rule_name = AWS Network Access Control List Deleted
rule_title = AWS Network ACL deleted by $src_user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - AWS Network ACL Details from ID\n     - ESCU - AWS Network Interface details via resourceId\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By ARN\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect AWS API Activities From Unapproved Accounts - Rule]
description = This search looks for successful CloudTrail activity by user accounts that are not listed in the identity table or <code>aws_service_accounts.csv</code>. It returns event names and count, as well as the first and last time a specific user or service is detected, grouped by users.
nes_fields = user
rule_description = A successful API activity was invoked by $user$, an unapproved/unknown account.
rule_name = Detect AWS API Activities From Unapproved Accounts
rule_title = Successful API activity by a non-approved account: $user$
security_domain = access
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate AWS User Activities by user field\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Schtasks scheduling job on remote system - Rule]
description = This search looks for flags passed to schtasks.exe on the command-line that indicate a job is being scheduled on a remote system.
nes_fields = dest, user, process
rule_description = This search looks for flags passed to schtasks.exe on the command-line that indicate a job is being scheduled on a remote system.
rule_name = Schtasks scheduling job on remote system
rule_title = Schtasks scheduling job on remote system
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious wevtutil Usage - Rule]
description = The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, or system event logs.
nes_fields = dest, process, user
rule_description = wevtutil is the windows event log tool. This searches for wevtutil clearing the security or system logs.
rule_name = Suspicious wevtutil Usage
rule_title = Suspicious wevtutil Usage
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Rare Executables - Rule]
description = This search will create a table of rare processes and the names of the systems running them.
nes_fields = dest, process
rule_description = The process $process$ was detected running on $dest. This process is rare in your environment.
rule_name = Detect Rare Executables
rule_title = Rare Process $process$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Monitor Web Traffic For Brand Abuse - Rule]
description = This search looks for Web requests to faux domains similar to the one that you want to have monitored for abuse.
nes_fields = src, url
rule_description = The host $src$ connected to a web site with a domain similar to that which you are monitoring for brand abuse.
rule_name = Monitor Web Traffic For Brand Abuse
rule_title = Web URL Brand Abuse from $src$
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Email Info\n     - ESCU - Get Emails From Specific Sender\n     - ESCU - Get Process responsible for the DNS traffic\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Sc.exe Manipulating Windows Services - Rule]
description = This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.
nes_fields = dest, user, process
rule_description = This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.
rule_name = Sc.exe Manipulating Windows Services
rule_title = Sc.exe Manipulating Windows Services
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - DNS Query Requests Resolved by Unauthorized DNS Servers - Rule]
description = This search will detect DNS requests resolved by unauthorized DNS servers. Legitimate DNS servers should be identified in the Enterprise Security Assets and Identity Framework.
nes_fields = dest, src
rule_description = The table represents a list of unauthorized DNS servers interacting with hosts in your network
rule_name = DNS Query Requests Resolved by Unauthorized DNS Servers
rule_title = DNS requests resolved by unauthorized DNS servers
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get DNS traffic ratio\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Deleting Shadow Copies - Rule]
description = The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.
nes_fields = dest, user, process_name
rule_description = Using $process$ to delete shadow copies is common behavior by ransomware. This activity was observed on $dest$
rule_name = Deleting Shadow Copies
rule_title = Deleting Shadow Copies on $dest$ with $process$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Shim Database File Creation - Rule]
description = This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft, a shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.
nes_fields = dest, file_name
rule_description = A file, $file_name$, was created in the default shim database directory on $dest.
rule_name = Shim Database File Creation
rule_title = Shim database file created on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Extended Period Without Successful Netbackup Backups - Rule]
description = This search returns a list of hosts that have not successfully completed a backup in over a week.
nes_fields = dest
rule_description = The system $dest$ has not had a successful backup for an extended period.
rule_name = Extended Period Without Successful Netbackup Backups
rule_title = Extended period of no successful backups by $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - All backup logs for host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect PsExec With accepteula Flag - Rule]
description = This search looks for events where <code>PsExec.exe</code> is run with the <code>accepteula</code> flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time, they will be prompted to accept the end-user license agreement (EULA), which can be passed as the argument <code>accepteula</code> within the command line.
nes_fields = dest,parent_process
rule_description = The process pssxec.exe was run with the -accepteula flag on $dest$ by $user$.
rule_name = Detect PsExec With accepteula Flag
rule_title = PsExec executed with accepteula flag on $dest$.
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Scheduled tasks used in BadRabbit ransomware - Rule]
description = This search looks for flags passed to schtasks.exe on the command-line that indicate that task names related to the execution of Bad Rabbit ransomware were created or deleted.
nes_fields = dest, user, process
rule_description = This search looks for flags passed to schtasks.exe on the command-line that indicate that task names specific to Bad Rabbit ransomware has been created or deleted
rule_name = Scheduled tasks used in BadRabbit ransomware
rule_title = Scheduled tasks used in BadRabbit ransomware detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Cloud Provisioning From Previously Unseen Country - Rule]
description = This search looks for AWS provisioning activities from previously unseen countries. Provisioning activities are defined broadly as any event that begins with "Run" or "Create." 
nes_fields = src_ip, country
rule_description = Your AWS infrastructure was provisioned from a country, $country$,  which has never before been seen provisioning your infrastructure.
rule_name = AWS Cloud Provisioning From Previously Unseen Country
rule_title = AWS Provision Activity From $country$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get All AWS Activity From City\n     - ESCU - Get All AWS Activity From Country\n     - ESCU - Get All AWS Activity From IP Address\n     - ESCU - Get All AWS Activity From Region\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Monitor Email For Brand Abuse - Rule]
description = This search looks for emails claiming to be sent from a domain similar to one that you want to have monitored for abuse.
nes_fields = src_user, message_id
rule_description = The sender $src_user$ has sent an email from a similar domain to that which you are monitoring for brand abuse.
rule_name = Monitor Email For Brand Abuse
rule_title = Possible Brand Abuse from $src_user$
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Email Info\n     - ESCU - Get Emails From Specific Sender\n     - ESCU - Get Process responsible for the DNS traffic\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Single Letter Process On Endpoint - Rule]
description = This search looks for process names that consist only of a single letter.
nes_fields = dest, process, user
rule_description = A process with a single letter, $process_name$ was detected on $dest$
rule_name = Single Letter Process On Endpoint
rule_title = Single-letter executable $process_name$ on $dest$.
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Protocols passing authentication in cleartext - Rule]
description = This search looks for cleartext protocols at risk of leaking credentials. Currently, this consists of legacy protocols such as telnet, POP3, IMAP, and non-anonymous FTP sessions. While some of these protocols can be used over SSL, they typically run on different assigned ports in those cases.
nes_fields = src, dest, user
rule_description = This search looks for the use of cleartext protocols that are known to pass authentication information in the clear. The cleartext credentials are typically passed at the beginning of the session.
rule_name = Protocols passing authentication in cleartext
rule_title = Possible credential leak over cleartext protocol
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Information For Port Activity\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Processes created by netsh - Rule]
description = This search looks for processes launching netsh.exe to execute various commands via the netsh command-line utility. Netsh.exe is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via command-line.
nes_fields = dest, process, parent_process, cmdline
rule_description = A process, $process$, is spawned by netsh.exe. It is highly unlikely for netsh to have any child processes
rule_name = Processes created by netsh
rule_title = Process spawned by netsh.exe detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Monitor DNS For Brand Abuse - Rule]
description = This search looks for DNS requests for faux domains similar to the domains that you want to have monitored for abuse.
nes_fields = src, query
rule_description = The host $src$ issued a DNS request for a domain to that which you are monitoring for brand abuse.
rule_name = Monitor DNS For Brand Abuse
rule_title = DNS Query Brand Abuse from $src$
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Email Info\n     - ESCU - Get Emails From Specific Sender\n     - ESCU - Get Process responsible for the DNS traffic\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Remote Desktop Network Traffic - Rule]
description = This search looks for network traffic on TCP/3389, the default port used by remote desktop. While remote desktop traffic is not uncommon on a network, it is usually associated with known hosts. This search allows for whitelisting both source and destination hosts to remove them from the output of the search so you can focus on the uncommon uses of remote desktop on your network.
nes_fields = dest, src
rule_description = Remote Desktop Traffic detected between $src$ and $dest$.  These two systems typically do not communicate with RDP
rule_name = Remote Desktop Network Traffic
rule_title = Uncommon Remote Desktop Network Traffic between $src$ and $dest$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Outbound Emails to Hidden Cobra Threat Actors\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Create local admin accounts using net.exe - Rule]
description = This search looks for the creation of local administrator accounts using net.exe.
nes_fields = dest
rule_description = Net.exe was used to create local administrator accounts on $dest$.
rule_name = Create local admin accounts using net.exe
rule_title = Local administrator account created on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Malicious PowerShell Process - Encoded Command - Rule]
description = This search looks for PowerShell processes that have encoded the script within the command-line. Malware has been seen using this parameter, as it obfuscates the code and makes it relatively easy to pass a script on the command-line.
nes_fields = dest, user, process, cmdline
rule_description = The system $dest$ executed a PowerShell process that has an encoded command on the command-line
rule_name = Malicious PowerShell Process - Encoded Command
rule_title = PowerShell process with an encoded command detected on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Attempt To Add Certificate To Untrusted Store - Rule]
description = Attempt to add a certificate to the untrusted certificate store
nes_fields = dest, user, process, cmdline
rule_description = Attempt to add a certificate to the untrusted certificate store
rule_name = Attempt To Add Certificate To Untrusted Store
rule_title = Attempt To Add Certificate to Untrusted Store
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Email Attachments With Lots Of Spaces - Rule]
description = Attackers often use spaces as a means to obfuscate an attachment's file extension. This search looks for messages with email attachments that have many spaces within the filename.
nes_fields = src_user, file_name
rule_description = The sender $src_user$ has sent an email with a suspicious amount of spaces in the file name: $file_name$
rule_name = Email Attachments With Lots Of Spaces
rule_title = Suspicious Email Attachment from $src_user$
security_domain = network
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Email Info\n     - ESCU - Get Emails From Specific Sender\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Prohibited Network Traffic Allowed - Rule]
description = This search looks for network traffic defined by port and transport layer protocol in the Enterprise Security lookup table "lookup_interesting_ports", that is marked as prohibited, and has an associated 'allow' action in the Network_Traffic data model. This could be indicative of a misconfigured network device.
nes_fields = src_ip, dest_ip
rule_description = This search looks for network traffic defined by port and transport in the ES lookup table "lookup_interesting_ports", that is marked as prohibited, and yet has an 'allow' action in the Network_Traffic data model. This should help to identify areas where a network device is not properly configured.
rule_name = Prohibited Network Traffic Allowed
rule_title = Prohibited Network Traffic Allowed from $src_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Prohibited Software On Endpoint - Rule]
description = This search looks for applications on the endpoint that you have marked as prohibited.
nes_fields = dest, process, user
rule_description = Prohibited software $process_name$ has been detected on $dest$
rule_name = Prohibited Software On Endpoint
rule_title = Prohibited Software Detected On $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Outbound SMB Traffic - Rule]
description = This search looks for outbound SMB connections made by hosts within your network to the internet. Server Message Block (SMB) traffic is used for Windows file-sharing activity. One of the techniques often used by attackers involves retrieving the credential hash using an SMB request made to a compromised server controlled by the threat actor.
nes_fields = src_ip, dest_ip
rule_description = Outbound SMB network traffic detected.
rule_name = Detect Outbound SMB Traffic
rule_title = Outbound SMB traffic from $src_ip$ to $dest_ip$ detected
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Outbound Emails to Hidden Cobra Threat Actors\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Spike in Security Group Activity - Rule]
description = This search will detect users creating spikes in API activity related to security groups in your AWS environment.  It will also update the cache file that factors in the latest data.
nes_fields = user
rule_description = A spike in the number of AWS API calls related to security groups by $user$ was detected.
rule_name = Detect Spike in Security Group Activity
rule_title = Spike in AWS Security Group activity detected by $user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Investigate AWS User Activities by user field\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Open Redirect in Splunk Web - Rule]
description = This search allows you to look for evidence of exploitation for CVE-2016-4859, the Splunk Open Redirect Vulnerability.
nes_fields = host
rule_description = Search for exploitation of the Splunk Open Redirect Vulnerability
rule_name = Open Redirect in Splunk Web
rule_title = Open Redirect in Splunk Web
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Suspicious writes to System Volume Information - Rule]
description = This search detects writes to the 'System Volume Information' folder by something other than the System process.
nes_fields = dest, file_name, process
rule_description = The process $process$ on $dest$ wrote $file_name$ to 'System Volume Information'.
rule_name = Suspicious writes to System Volume Information
rule_title = Suspicious process $process$ wrote to 'System Volume Information' on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Registry Keys Used For Persistence - Rule]
description = The search looks for modifications to registry keys that can be used to launch an application or service at system start.
nes_fields = dest, src_user, object
rule_description = A registry key that is used for persistence on Windows was modified on $dest$ by $src_user$
rule_name = Registry Keys Used For Persistence
rule_title = Registry Key Associated With Persistence Modified on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - SMB Traffic Spike - Rule]
description = This search looks for spike in the number of Server Message Block (SMB) traffic connections
nes_fields = src
rule_description = There was a spike in SMB traffic from $src$
rule_name = SMB Traffic Spike
rule_title = SMB Traffic Spike from $src$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Backup Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get Update Logs For Endpoint\n     - ESCU - Get User Information from Identity Table\n     - ESCU - Get Vulnerability Logs For Endpoint\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Get Process Information For Port Activity\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Email files written outside of the Outlook directory - Rule]
description = The search looks at the Change Analysis data model and detects email files that are created outside the normal Outlook directory.
nes_fields = dest, file_path, action, file_name
rule_description = The system $dest$ has email files not in the normal Outlook directory 
rule_name = Email files written outside of the Outlook directory
rule_title = Email files created or modified on $dest$ that are not in the normal Outlook directory
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Identify New User Accounts - Rule]
description = This detection search will help profile user accounts in your environment by identifying newly created accounts that have been added to your network in the past week.
nes_fields = user
rule_description = Using the identities lookup and macro from Enterprise Security to identify (report) new users (6 month period) and temp users (3 months until account expiration)
rule_name = Identify New User Accounts
rule_title = Identify Temporary Users
security_domain = access
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Logon Rights Modifications For Endpoint\n     - ESCU - Get Logon Rights Modifications For User\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Attempt To Stop Security Service - Rule]
description = This search looks for attempts to stop security-related services on the endpoint.
nes_fields = dest, process, user
rule_description = Attempt to stop a security-related service on $dest$
rule_name = Attempt To Stop Security Service
rule_title = Attempt to Stop Security Service On $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Uncommon Processes On Endpoint - Rule]
description = This search looks for applications on the endpoint that you have marked as prohibited.
nes_fields = dest, process, user
rule_description = Prohibited software $process_name$ has been detected on $dest$
rule_name = Uncommon Processes On Endpoint
rule_title = Prohibited Software Detected On $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Registry Keys for Creating SHIM Databases - Rule]
description = This search looks for registry activity associated with application compatibility shims, which can be leveraged by attackers for various nefarious purposes.
nes_fields = dest, user
rule_description = A registry key that is used for persistence on Windows was modified on $dest$ by $user$
rule_name = Registry Keys for Creating SHIM Databases
rule_title = Registry Key Associated With SHIM databases on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - AWS Cross Account Activity From Previously Unseen Account - Rule]
description = This search looks for AssumeRole events where an IAM role in a different account is requested for the first time.
nes_fields = requestingAccountId, requestedAccountId, src_user, dest_user
rule_description = Access to $dest_user$ was requested for the first time by $src_user$
rule_name = AWS Cross Account Activity From Previously Unseen Account
rule_title = AWS Account $dest_user$ access by $src_user$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Notable History\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - AWS Investigate User Activities By AccessKeyId\n     - ESCU - AWS Investigate User Activities By Source User\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detect Prohibited Applications Spawning cmd.exe - Rule]
description = This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and does not typically launch cmd.exe.
nes_fields = dest, dest, process, parent_process, cmdline
rule_description = A prohibited application from prohibited_apps_launching_cmd.csv was leveraged to launch cmd.exe
rule_name = Detect Prohibited Applications Spawning cmd.exe
rule_title = Prohibited application($parent_process$) used to launch cmd.exe on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Remote Process Instantiation via WMI - Rule]
description = This search looks for wmic.exe being launched with parameters to spawn a process on a remote system.
nes_fields = dest, user, process
rule_description = This search looks for wmic.exe being launched with parameters to spawn a process on a remote system.
rule_name = Remote Process Instantiation via WMI
rule_title = Remote process instantiation via WMI on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Execution of File with Multiple Extensions - Rule]
description = This search looks for processes launched from files that have 2 extensions in the file name. This is typically done to obscure the "real" file extension and make it appear as though the file being accessed is a data file as opposed to executable content.
nes_fields = dest, process, object_path
rule_description = The system $dest$ executed a file with a double extension
rule_name = Execution of File with Multiple Extensions
rule_title = Process With Multiple Extensions Launched on $dest$
security_domain = endpoint
severity = high
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Detection of DNS Tunnels - Rule]
description = This search is used to detect DNS tunneling, by calculating the sum of the length of DNS queries and DNS answers. The search also filters out potential false positives by filtering out queries made to internal systems and the queries originating from internal DNS, Web, and Email servers. Endpoints using DNS as a method of transmission for data exfiltration, command and control, or evasion of security controls can often be detected by noting an unusually large volume of DNS traffic.
nes_fields = src
rule_description = Potential DNS tunnel detected from $src$ which may be exfiltrating large data
rule_name = Detection of DNS Tunnels
rule_title = DNS tunnel detected on $src$
security_domain = network
severity = low
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get DNS Server History for a host\n     - ESCU - Get Process responsible for the DNS traffic\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Unusually Long Command Line - Rule]
description = Command-lines that are extremely long can be indicative of malicious activity on your hosts.
nes_fields = dest, process, user
rule_description = An unusually long command-line was found on $dest$
rule_name = Unusually Long Command Line
rule_title = Unusually Long Command-Line on $dest$
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Process Info\n     - ESCU - Investigate Web Activity From Host\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - EC2 Instance Started With Previously Unseen Instance Type - Rule]
description = This search looks for EC2 instances being created with previously unseen instance types.
nes_fields = instanceType
rule_description = The EC2 instance type $instanceType$ was used for the first time to create $dest$.
rule_name = EC2 Instance Started With Previously Unseen Instance Type
rule_title = New EC2 Instance Type $instanceType$ detected
security_domain = endpoint
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get EC2 Launch Details\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n"}
recommended_actions = escu_contextualize, escu_investigate

[ESCU - Hosts receiving high volume of network traffic from email server - Rule]
description = This search looks for an increase of data transfers from your email server to your clients. This could be indicative of a malicious actor collecting data using your email server.
nes_fields = src_ip
rule_description = $src_ip$ receiving high volume of traffic that originated from an email server
rule_name = Hosts receiving high volume of network traffic from email server
rule_title = High volume traffic from email server received by $src_ip$
security_domain = network
severity = medium
next_steps = {"version": 1, "data": "Recommended following steps:\n\n1. [[action|escu_contextualize]]: Based on ESCU context gathering recommendations:\n     - ESCU - Get Authentication Logs For Endpoint\n     - ESCU - Get Notable History\n     - ESCU - Get Notable Info\n     - ESCU - Get Risk Modifiers For Endpoint\n     - ESCU - Get Risk Modifiers For User\n     - ESCU - Get User Information from Identity Table\n\n2. [[action|escu_investigate]]: Based on ESCU investigate recommendations:\n     - ESCU - Get Parent Process Info\n     - ESCU - Get Process Info\n"}
recommended_actions = escu_contextualize, escu_investigate

