
[escu_add_mappings(1)]
args = search_name
definition = join $search_name$ [| rest /services/configs/conf-savedsearches splunk_server=local count=0 | search action.escu.full_search_name=$search_name$ | rename action.escu.full_search_name as search_name | spath input=action.escu.mappings path=mitre_attack{} output=mitre_attack | spath input=action.escu.mappings path=cis20{} output=sans_cis20 | spath input=action.escu.mappings path=kill_chain_phases{} output=kill_chain_phases | table search_name, mitre_attack, sans_cis20, kill_chain_phases ]

[runstory(1)]
args = story_name
definition = runstory story=$story_name$ | table name, num_search_results, description, kill_chain_phases, mitre_attack

[filter_rare_process_whitelist]
definition = lookup update=true lookup_rare_process_whitelist_default process as process OUTPUTNEW whitelist | where whitelist=false | lookup update=true lookup_rare_process_whitelist_local process as process OUTPUT whitelist | where whitelist=false

[uncommon_processes]
definition = lookup update=true lookup_uncommon_processes_default process as process outputnew uncommon_default,category_default,analytic_story_default,kill_chain_phase_default,mitre_attack_default | lookup update=true  lookup_uncommon_processes_local process as process outputnew uncommon_local,category_local,analytic_story_local,kill_chain_phase_local,mitre_attack_local | eval uncommon = coalesce(uncommon_default, uncommon_local), analytic_story = coalesce(analytic_story_default, analytic_story_local), category=coalesce(category_default, category_local), kill_chain_phase=coalesce(kill_chain_phase_default, kill_chain_phase_local), mitre_attack=coalesce(mitre_attack_default, mitre_attack_local) | fields - analytic_story_default, analytic_story_local, category_default, category_local, kill_chain_phase_default, kill_chain_phase_local, mitre_attack_default, mitre_attack_local, uncommon_default, uncommon_local | search uncommon=true

[prohibited_apps_launching_cmd]
definition = | inputlookup prohibited_apps_launching_cmd | rename prohibited_applications as parent_process | eval parent_process="*" . parent_process | table parent_process

[prohibited_softwares]
definition = lookup interesting_processes_lookup app as process OUTPUT is_prohibited | search is_prohibited=True

[brand_abuse_dns]
definition = lookup update=true brandMonitoring_lookup domain as query OUTPUT domain_abuse | search domain_abuse=true

[brand_abuse_email]
definition = lookup update=true brandMonitoring_lookup domain as src_user OUTPUT domain_abuse | search domain_abuse=true

[brand_abuse_web]
definition = lookup update=true brandMonitoring_lookup domain as urls OUTPUT domain_abuse | search domain_abuse=true

[ransomware_extensions]
definition = lookup update=true ransomware_extensions_lookup Extensions AS file_extension OUTPUT Name | search Name !=False

[ransomware_notes]
definition = lookup ransomware_notes_lookup ransomware_notes as file_name OUTPUT status as "Known Ransomware Notes" | search "Known Ransomware Notes"=True

[suspicious_writes]
definition = lookup suspicious_writes_lookup file as file_name OUTPUT note as "Reference" | search "Reference" != False

[dynamic_dns_providers]
definition = lookup update=true dynamic_dns_providers dynamic_dns_domains as query OUTPUT isDynDNS| search isDynDNS=true

[suspicious_email_attachments]
definition = lookup update=true isSuspiciousFileExtension_lookup file_name OUTPUT suspicious | search suspicious=true

[isWindowsSystemFile]
definition = lookup update=true isWindowsSystemFile_lookup filename as process OUTPUT systemFile | search systemFile=true

[ec2ModificationAPIs]
definition = (eventName=AssociateAddress OR eventName=AssociateIamInstanceProfile OR eventName=AttachClassicLinkVpc OR eventName=AttachNetworkInterface OR eventName=AttachVolume OR eventName=BundleInstance OR eventName=DetachClassicLinkVpc OR eventName=DetachVolume OR eventName=GetConsoleOutput OR eventName=GetConsoleScreenshot OR eventName=ModifyInstanceAttribute OR eventName=ModifyInstancePlacement OR eventName=MonitorInstances OR eventName=RebootInstances OR eventName=ResetInstanceAttribute OR eventName=StartInstances OR eventName=StopInstances OR eventName=TerminateInstances OR eventName=UnmonitorInstances)

[securityGroupAPIs]
definition = (eventName=AuthorizeSecurityGroupIngress OR eventName=CreateSecurityGroup OR eventName=DeleteSecurityGroup OR eventName=DescribeClusterSecurityGroups OR eventName=DescribeDBSecurityGroups OR eventName=DescribeSecurityGroupReferences OR eventName=DescribeSecurityGroups OR eventName=DescribeStaleSecurityGroups OR eventName=RevokeSecurityGroupIngress OR eventName=UpdateSecurityGroupRuleDescriptionsIngress)

[NetworkACLEvents]
definition = (eventName = CreateNetworkAcl OR eventName = CreateNetworkAclEntry OR eventName = DeleteNetworkAcl OR eventName = DeleteNetworkAclEntry OR eventName = ReplaceNetworkAclEntry OR eventName = ReplaceNetworkAclAssociation)


